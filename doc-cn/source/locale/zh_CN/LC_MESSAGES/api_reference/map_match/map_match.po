# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, zilliz
# This file is distributed under the same license as the Arctern package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Arctern \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-12 17:31+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/api_reference/map_match/map_match.rst:4
msgid "Map Match"
msgstr "地图匹配"

#: ../../source/api_reference/map_match/map_match.rst:12:<autosummary>:1
msgid ""
":obj:`arctern.nearest_location_on_road "
"<arctern.nearest_location_on_road>`\\ \\(roads\\, points\\)"
msgstr ""

#: ../../source/api_reference/map_match/map_match.rst:12:<autosummary>:1
msgid "Returns the location on ``roads`` closest to the ``points``."
msgstr "在 ``roads`` 中的所有道路上查找最接近 ``points`` 中的点的位置。"

#: ../../source/api_reference/map_match/map_match.rst:12:<autosummary>:1
msgid ":obj:`arctern.nearest_road <arctern.nearest_road>`\\ \\(roads\\, points\\)"
msgstr ""

#: ../../source/api_reference/map_match/map_match.rst:12:<autosummary>:1
msgid "Returns the road in ``roads`` closest to the ``points``."
msgstr "在 ``roads`` 中的所有道路上查找最接近 ``points`` 中的点的道路。"

#: ../../source/api_reference/map_match/map_match.rst:12:<autosummary>:1
msgid ""
":obj:`arctern.near_road <arctern.near_road>`\\ \\(roads\\, points\\[\\, "
"distance\\]\\)"
msgstr ""

#: ../../source/api_reference/map_match/map_match.rst:12:<autosummary>:1
msgid ""
"Tests whether there is a road within the given ``distance`` of all "
"``points``."
msgstr "检查在所有 ``points`` 附近的给定范围 ``distance`` 内是否存在道路。"

#: ../../source/api_reference/map_match/map_match.rst:12:<autosummary>:1
msgid ":obj:`arctern.within_which <arctern.within_which>`\\ \\(left\\, right\\)"
msgstr ""

#: ../../source/api_reference/map_match/map_match.rst:12:<autosummary>:1
msgid ""
"For each geometry in ``left``, search for a geometry in ``right`` that "
"contains it."
msgstr "对于 ``left`` 中的每个几何体，在 ``right`` 中搜索包含该几何体的几何体。"

